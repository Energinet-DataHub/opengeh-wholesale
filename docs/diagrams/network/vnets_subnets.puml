' How to render this diagram:
' 1. Install PlantUML extension in VS Code, see https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml
' 2. Run task: "PlantUML: Start PlantUML server".
' This will start a PlantUML server in Docker on localhost:8081 used to render this diagram.
' Once container is running, press Ctrl-Shift-P and select "PlantUML: Preview Current Diagram" - enjoy!

' *** AUTOMATIC RENDERING TO PNG IS NOT IMPLEMENTED ***
' It is possible to render PlantUML diagrams to PNG by using a local PlantUML server, like Structurizr DSL files are rendered to PNG
' and pushed to dh3-infrastructure as part of a PR changing our diagrams.
' However, we have opted out of implementing automatic rendering of PlantUML diagrams as we only have this one diagram right now.
'
' If one should feel inclined to implement this feature in our CI pipeline, AVOID attempting to render diagrams using the Base64 encoded
' URL, as the encoding/decoding algorithm is a clusterf*ck of a proprietary implementation meaning that you cannot Base64-encode a diagram and
' attempt to render it using a PlantUML server unless you implement the PlantUML project's proprietary encoding algorithm in your own code first :o/
' See this issue thread for details: https://github.com/plantuml/plantuml/issues/117
' If you dare, follow this code trail to see the proprietary encode/decode implementation: https://github.com/plantuml/plantuml/blob/master/src/net/sourceforge/plantuml/code/TranscoderSmart.java#L54

' The right way to go for rendering diagrams to PNGs in our case would be to follow the "Command-line" approach for rendering diagrams, see https://plantuml.com/command-line
' Feel free to do so when there is a bit more ROI (i.e. more diagrams than just this one)


@startuml
nwdiag {

  legend top left
  Red = Cloud Architecture
  Green = The Outlaws
  Black = Energinet team
  endlegend


  title CCP network diagram for Datahub 3.0, region West Europe (WE)
  dh3_user [shape = actor]
  dh3_user -- dh3_inet_browser

  b2b_actor [shape = actor]
  b2b_actor -- b2b_channel

  network internet {
    width = full
    dh3_inet_browser
    b2b_channel
    api_management [address = "13.81.42.254, tcp/443"]
  }

  'CAs VNET, outside subscription
  network vnet_platformhub_prod_we_001 {
    width = full
    color = "red"
    vnet_shres_peering [shape = interface]
    vnet_datahub_online_peering [shape = interface]
  }

  'VNET delivered by CA on subscription, peered to vnet_platformhub_prod_we_001
  network vnet_datahub_online_prod_we_001 {
    color = "red"
    vnet_datahub_online_peering
    nsg_vnetintegrations_shres
    nsg_privateendpoint_shres
    nsg_apim_shres
    vnet_wholsal_peering [shape = interface]
    vnet_mig_peering [shape = interface]
    width = full
  }

  network snet_vnetintegrations_shres {
    color = "red"
    nsg_vnetintegrations_shres
    width = full
  }

  network snet_privateendpoint {
    color = "red"
    functionapps [shape = node]
    sqlserver [shape = node]
    storageaccounts [shape = node]
    keyvault [shape = node]
    eventhub [shape = node]
    webapps [shape = node]
    nsg_privateendpoint_shres
    width = full
  }

  network snet_apim_shres {
    color = "red"
    nsg_apim_shres
    api_management [shape = node]
    width = full
  }

  network snet_private_shres {
    color = "red"
    vnet_shres_peering
    width = full
  }

  network snet_public_shres {
    color = "red"
    vnet_shres_peering
    width = full
  }


  'Wholesale
  network vnet_wholsal_p_we_001 {
    color = "green"
    vnet_wholsal_peering
    nsg_dbw_wholsal_p_we_001
    width = full
  }

  network snet_private_wholsal {
    color = "green"
    nsg_dbw_wholsal_p_we_001
    dbx_wholsal_p_we_001
  }

  network snet_public_wholsal {
    color = "green"
    nsg_dbw_wholsal_p_we_001
  }

  'Migration
  network vnet_mig_p_we_001 {
    color = "green"
      vnet_mig_peering
      nsg_dbw_mig_p_we_001
      width = full
  }

  network snet_private_mig {
    color = "green"
    nsg_dbw_mig_p_we_001
    dbx_mig_p_we_001
  }

  network snet_public_mig {
    color = "green"
    nsg_dbw_mig_p_we_001
  }
}

@enduml

