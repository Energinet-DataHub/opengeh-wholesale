/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "Contracts/Common/DecimalValue.proto";
import "Contracts/Common/Period.proto";
import "Contracts/Common/QuantityQuality.proto";

option csharp_namespace = "Energinet.DataHub.Edi.Responses";

message WholesaleServicesRequestAccepted {
  repeated WholesaleServicesRequestSeries series = 1;
}

/*
 * A calculation will result in one or more wholesale results. Each result is
 * published as an instance of this type.
 */
message WholesaleServicesRequestSeries {
  Period period = 1;

  string grid_area = 2;

  string energy_supplier_id = 3;

  string charge_code = 4;

  ChargeType charge_type = 5;

  string charge_owner_id = 6;

  Resolution resolution = 7;

  QuantityUnit quantity_unit = 8;

  optional MeteringPointType metering_point_type = 9;

  /*
   * Settlement method is only set when metering point type is 'METERING_POINT_TYPE_CONSUMPTION'.
   */
  optional SettlementMethod settlement_method = 10;

  Currency currency = 11;

  repeated Point time_series_points = 12;

  /*
   * The version of the calculation result. It is a positive integer (int64).
  */
  int64 calculation_result_version = 13;

  CalculationType calculation_type = 14;

  // ---------------------------- NESTED TYPES BELOW ----------------------------------------

  enum CalculationType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    CALCULATION_TYPE_UNSPECIFIED = 0;
    CALCULATION_TYPE_WHOLESALE_FIXING = 1;
    CALCULATION_TYPE_FIRST_CORRECTION_SETTLEMENT = 2;
    CALCULATION_TYPE_SECOND_CORRECTION_SETTLEMENT = 3;
    CALCULATION_TYPE_THIRD_CORRECTION_SETTLEMENT = 4;
  }

  enum ChargeType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    CHARGE_TYPE_UNSPECIFIED = 0;
    CHARGE_TYPE_FEE = 1;
    CHARGE_TYPE_TARIFF = 2;
    CHARGE_TYPE_SUBSCRIPTION = 3;
  }

  enum MeteringPointType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     *
     * Possible values for metering point type are any but the exchange metering point type.
     */
    METERING_POINT_TYPE_UNSPECIFIED = 0;
    METERING_POINT_TYPE_PRODUCTION = 1;
    METERING_POINT_TYPE_CONSUMPTION = 2;
  }

  enum QuantityUnit {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    QUANTITY_UNIT_UNSPECIFIED = 0;

    // States that the energy quantity is measured in kWh (kilo Watt hours).
    QUANTITY_UNIT_KWH = 1;
    QUANTITY_UNIT_PIECES = 2;
  }

  /*
   *  States the duration that each time series point represents
   */
  enum Resolution {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    RESOLUTION_UNSPECIFIED = 0;
    RESOLUTION_DAY = 1;
    RESOLUTION_HOUR = 2;
    RESOLUTION_MONTHLY = 3;
  }

  enum SettlementMethod {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    SETTLEMENT_METHOD_UNSPECIFIED = 0;
    SETTLEMENT_METHOD_FLEX = 1;
    SETTLEMENT_METHOD_NON_PROFILED = 2;
  }

  enum Currency {
    CURRENCY_UNSPECIFIED = 0;
    CURRENCY_DKK = 1;
  }

  message Point {

    google.protobuf.Timestamp time = 1;

    /*
     * 3 digit scale decimal value. The value represents either energy quantity or pieces (dependency on QuantityUnit).
     */
    DecimalValue quantity = 2;

    repeated QuantityQuality quantity_qualities = 3;

    /*
     * 6 digit scale decimal value of the price.
     * The value can be null if no price data is present for the given time series point.
     */
    optional DecimalValue price = 4;

    /*
     * 6 digit scale decimal value of the amount.
     * The value can be null if price is null
     */
    optional DecimalValue amount = 5;
  }
}