/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Energinet.DataHub.Wholesale.Contracts";

message AggregationPerGridArea {
    /*
     * The grid area code uniquely defining the process in the batch.
     * The grid area code is a 3 character string consisting solely of digits.
     * Examples:
     *   543
     *   020
     */
    string grid_area_code = 1;
}

message AggregationPerEnergySupplierPerGridArea {
    /*
     * The grid area code uniquely defining the process in the batch.
     * The grid area code is a 3 character string consisting solely of digits.
     * Examples:
     *   543
     *   020
     */
    string grid_area_code = 1;

    string EnergySupplierId = 2;
}

message AggregationPerBalanceResponsiblePartyPerGridArea {
    /*
     * The grid area code uniquely defining the process in the batch.
     * The grid area code is a 3 character string consisting solely of digits.
     * Examples:
     *   543
     *   020
     */
    string grid_area_code = 1;

    string BalanceResponsibleId = 2;
}

message AggregationPerEnergySupplierPerBalanceResponsiblePartyPerGridArea {
    /*
     * The grid area code uniquely defining the process in the batch.
     * The grid area code is a 3 character string consisting solely of digits.
     * Examples:
     *   543
     *   020
     */
    string grid_area_code = 1;

    string BalanceResponsibleId = 2;

    string EnergySupplierId = 3;
}

enum ProcessType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    PROCESS_TYPE_UNSPECIFIED = 0;
    PROCESS_TYPE_BALANCE_FIXING = 1;
    PROCESS_TYPE_AGGREGATION = 2;
    PROCESS_TYPE_WHOLESALE_FIXING = 3;
    PROCESS_TYPE_FIRST_CORRECTION_SETTLEMENT = 4;
    PROCESS_TYPE_SECOND_CORRECTION_SETTLEMENT = 5;
    PROCESS_TYPE_THIRD_CORRECTION_SETTLEMENT = 6;
}

enum TimeSeriesType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    TIME_SERIES_TYPE_UNSPECIFIED = 0;
    TIME_SERIES_TYPE_PRODUCTION = 1;
    TIME_SERIES_TYPE_NON_PROFILED_CONSUMPTION = 2;
    TIME_SERIES_TYPE_FLEX_CONSUMPTION = 3;
    TIME_SERIES_TYPE_NET_EXCHANGE_PER_GA = 4;
    TIME_SERIES_TYPE_NET_EXCHANGE_PER_NEIGHBORING_GA = 5;
    TIME_SERIES_TYPE_GRID_LOSS = 6;
    TIME_SERIES_TYPE_NEGATIVE_GRID_LOSS = 7;
    TIME_SERIES_TYPE_POSITIVE_GRID_LOSS = 8;
    TIME_SERIES_TYPE_TOTAL_CONSUMPTION = 9;
    TIME_SERIES_TYPE_TEMP_FLEX_CONSUMPTION = 10;
    TIME_SERIES_TYPE_TEMP_PRODUCTION = 11;
}

enum Resolution {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    RESOLUTION_UNSPECIFIED = 0;

    // States that each time series point represents a time interval of one quarter (15 minutes).
    RESOLUTION_QUARTER = 1;
}

enum QuantityUnit {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    QUANTITY_UNIT_UNSPECIFIED = 0;

    // States that the energy quantity is measured in kWh (kilo Watt hours).
    QUANTITY_UNIT_KWH = 1;
}

message TimeSeriesPoint {

    // The start of the time interval where the energy was produces/consumed.
    google.protobuf.Timestamp time = 1;

    /*
     * 3 digit scale decimal value of the energy quantity.
     * Value is only set when quality is not set to missing.
     */
    optional DecimalValue quantity = 2;

    // The aggregated quality currently represents a value suitable for creation of RSM-014 CIM XML messages.
    QuantityQuality quantity_quality = 3;
}

/*
 * The quality of the energy quantity.
 */
enum QuantityQuality {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    QUANTITY_QUALITY_UNSPECIFIED = 0;
    QUANTITY_QUALITY_ESTIMATED = 1;
    QUANTITY_QUALITY_MEASURED = 2;
    QUANTITY_QUALITY_MISSING = 3;
    QUANTITY_QUALITY_INCOMPLETE = 4;
    QUANTITY_QUALITY_CALCULATED = 5;
}

/*
 * Representation of a decimal value.
 * See more at https://learn.microsoft.com/en-us/dotnet/architecture/grpc-for-wcf-developers/protobuf-data-types#decimals.
 * Example: 12345.6789 -> { units = 12345, nanos = 678900000 }
 */
message DecimalValue {

    // Whole units part of the amount
    int64 units = 1;

    // Nano units of the amount (10^-9)
    // Must be same sign as units
    sfixed32 nanos = 2;
}
