/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "common.proto";

option csharp_namespace = "Energinet.DataHub.Wholesale.Contracts.IntegrationEvents";


/*
 * A calculation will result in one or more energy results. Each result is
 * published as an instance of this type.
 */
message EnergyResultProducedV1 {
  /*
   * The ID of the calculation creating the result.
   * The ID is a UUID consisting of hexadecimal digits in the form XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX.
   * Example: 65801e3c-5131-426e-b1bb-7b186349c996
   */
  string calculation_id = 1;

  // The level at which the result is aggregated.
  oneof aggregation_level {
    AggregationPerGridArea aggregation_per_gridarea = 2;
    AggregationPerEnergySupplierPerGridArea aggregation_per_energysupplier_per_gridarea = 3;
    AggregationPerBalanceResponsiblePartyPerGridArea aggregation_per_balanceresponsibleparty_per_gridarea = 4;
    AggregationPerEnergySupplierPerBalanceResponsiblePartyPerGridArea aggregation_per_energysupplier_per_balanceresponsibleparty_per_gridarea = 5;
  }

  ProcessType process_type = 10;

  TimeSeriesType time_series_type = 11;

  /*
   * The beginning of the calculation period.
   * The time is included in the period and is identical to the time of the first time series point
   * in the process time series type results.
   */
  google.protobuf.Timestamp period_start_utc = 12;

  /*
   * The end of the calculation period.
   * The time is excluded from the period.
   */
  google.protobuf.Timestamp period_end_utc = 13;

  EnergyResolution resolution = 14;

  QuantityUnit quantity_unit = 15;

  /*
   * The grid area from which the exchange is leaving.
   * The exchange goes into the grid area specified in the aggregation.
   * Only applies to results with exchange time series types.
   */
   google.protobuf.StringValue from_grid_area_code = 16;

  repeated EnergyTimeSeriesPoint time_series_points = 20;
}

enum TimeSeriesType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    TIME_SERIES_TYPE_UNSPECIFIED = 0;
    TIME_SERIES_TYPE_PRODUCTION = 1;
    TIME_SERIES_TYPE_NON_PROFILED_CONSUMPTION = 2;
    TIME_SERIES_TYPE_FLEX_CONSUMPTION = 3;
    TIME_SERIES_TYPE_NET_EXCHANGE_PER_GA = 4;
    TIME_SERIES_TYPE_NET_EXCHANGE_PER_NEIGHBORING_GA = 5;
    TIME_SERIES_TYPE_GRID_LOSS = 6;
    TIME_SERIES_TYPE_NEGATIVE_GRID_LOSS = 7;
    TIME_SERIES_TYPE_POSITIVE_GRID_LOSS = 8;
    TIME_SERIES_TYPE_TOTAL_CONSUMPTION = 9;
    TIME_SERIES_TYPE_TEMP_FLEX_CONSUMPTION = 10;
    TIME_SERIES_TYPE_TEMP_PRODUCTION = 11;
}

enum EnergyResolution {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    RESOLUTION_UNSPECIFIED = 0;

    // States that each time series point represents a time interval of one quarter (15 minutes).
    RESOLUTION_QUARTER = 1;
}
