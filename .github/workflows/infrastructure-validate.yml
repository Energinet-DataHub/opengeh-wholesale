name: Infrastructure validate

# DESCRIPTION:
#
# Should only be used for pull requests.
#
# This workflow will validate the infrastructure as code (terraform files).
# The workflow finds any environment overrite folders that may exist and
# validates these in conjuction with the main configuration.

on:
  workflow_call:
    inputs:
      infrastructure_path:
        required: true
        type: string
      operating_system:
        required: false
        default: ubuntu-22.04
        type: string

env:
  TERRAFORM_RELEASE_FOLDER_PATH: ${{ github.workspace }}/infrastructure

jobs:
  find_environment_names:
    name: Finding environments of ${{ inputs.infrastructure_path }}
    runs-on: ${{ inputs.operating_system }}
    outputs:
      folders: ${{ steps.find_folder_names.outputs.folders }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # bash tree is used to make it easier to finder the subfolders.
      # https://linuxhint.com/bash-tree-command/
      - run: sudo apt install tree jq -y
        shell: bash

      - name: Finding folders
        id: find_folder_names
        shell: bash
        run: |
          if [ -d ${{ inputs.infrastructure_path }}/env ]; then
            echo "Finding folders"
            cd ${{ inputs.infrastructure_path }}/env
            folders=$(tree -J -d -L 1 | jq -c '.[0].contents | map(.name)')
            echo "folders=$folders" >> $GITHUB_OUTPUT
          else
            echo "No env folder"
            declare -a folders=()
            echo "folders=$folders" >> $GITHUB_OUTPUT
          fi

  # If no environments exists, we still need to validate main folder
  validate_main_environment:
    if: ${{ needs.find_environment_names.outputs.folders == '' }}
    needs: find_environment_names
    name: Validating main configuration of ${{ inputs.infrastructure_path }}
    runs-on: ${{ inputs.operating_system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy infrastructure files
        shell: bash
        run: |
          cp -fR ${{ inputs.infrastructure_path }}/main ${{ env.TERRAFORM_RELEASE_FOLDER_PATH }} 2>/dev/null || :

      - name: Terraform validate
        uses: ./.github/actions/terraform-validate
        with:
          pat_token: ${{ secrets.PAT_TOKEN }}
          working_directory: ${{ env.TERRAFORM_RELEASE_FOLDER_PATH }}

  # If environments exists, we validate the environments
  validate_environments:
    if: ${{ needs.find_environment_names.outputs.folders != '' }}
    needs: find_environment_names
    name: Validating ${{ matrix.environment_folder_name }} configuration of ${{ inputs.infrastructure_path }}
    runs-on: ${{ inputs.operating_system }}
    strategy:
      matrix:
        environment_folder_name: ${{ fromJSON(needs.find_environment_names.outputs.folders) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy infrastructure files
        shell: bash
        run: |
          cp -fR ${{ inputs.infrastructure_path }}/main ${{ env.TERRAFORM_RELEASE_FOLDER_PATH }} 2>/dev/null || :
          cp -fR ${{ inputs.infrastructure_path }}/env/${{ matrix.environment_folder_name }}/* ${{ env.TERRAFORM_RELEASE_FOLDER_PATH }} 2>/dev/null || :

      - name: Terraform validate
        uses: ./.github/actions/terraform-validate
        with:
          pat_token: ${{ secrets.PAT_TOKEN }}
          working_directory: ${{ env.TERRAFORM_RELEASE_FOLDER_PATH }}
