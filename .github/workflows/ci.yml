# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: CI

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .docker/**
      - .github/workflows/cd-docker-test-image.yml

jobs:
  ci_base:
    uses: Energinet-DataHub/.github/.github/workflows/ci-base.yml@v8

  # Build all projects within solution.
  dotnet_solution_ci_build:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-build.yml@v8
    with:
      SOLUTION_FILE_PATH: 'source/dotnet/Wholesale.sln'

  # PoC on waiting for another job
  poc_wait_on_job:
    runs-on: ubuntu-22.04
    env:
      ARTIFACTS_PATH: ${{ github.workspace }}\artifacts
    steps:
      - name: Print OS before
        shell: bash
        run: |
          echo "Runner OS is $RUNNER_OS"

      - name: Wait for job to succeed
        uses: Energinet-DataHub/.github/.github/actions/job-wait-completion@poc
        with:
          who-to-greet: 'Mona the Octocat'
          # ref: ${{ github.ref }}
          # repo-token: ${{ secrets.GITHUB_TOKEN }}
          # check-name: 'dotnet_solution_ci_build / dotnet_ci_build'
          # wait-interval: 15

      - name: Download dotnet artifact
        uses: actions/download-artifact@v3
        with:
          name: dotnet
          path: ${{ env.ARTIFACTS_PATH }}

  # Run tests in 'IntegrationTests.dll' within the namespace 'IntegrationEventListener'
  dotnet_solution_ci_test_integrationtests_part1:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\dotnet\IntegrationTests\bin\Release\net6.0\Energinet.DataHub.Wholesale.IntegrationTests.dll'
      TESTS_FILTER_EXPRESSION: 'FullyQualifiedName~IntegrationEventListener'
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_NAME: ASPNETCORE_TEST_CONTENTROOT_ENERGINET_DATAHUB_WHOLESALE_WEBAPI
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_VALUE: '\tests\source\dotnet\WebApi'
      USE_AZURE_FUNCTIONS_TOOLS: true
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_SECRETS_KEYVAULT_URL: ${{ secrets.AZURE_SECRETS_KEYVAULT_URL }}

  # Run tests in 'IntegrationTests.dll' NOT within the namespace 'IntegrationEventListener'
  dotnet_solution_ci_test_integrationtests_part2:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\dotnet\IntegrationTests\bin\Release\net6.0\Energinet.DataHub.Wholesale.IntegrationTests.dll'
      TESTS_FILTER_EXPRESSION: 'FullyQualifiedName!~IntegrationEventListener'
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_NAME: ASPNETCORE_TEST_CONTENTROOT_ENERGINET_DATAHUB_WHOLESALE_WEBAPI
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_VALUE: '\tests\source\dotnet\WebApi'
      USE_AZURE_FUNCTIONS_TOOLS: true
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_SECRETS_KEYVAULT_URL: ${{ secrets.AZURE_SECRETS_KEYVAULT_URL }}

  # Run all tests in 'Tests.dll'
  dotnet_solution_ci_test_tests:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\dotnet\Tests\bin\Release\net6.0\Energinet.DataHub.Wholesale.Tests.dll'
      USE_AZURE_FUNCTIONS_TOOLS: false
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}

  # TODO: Enable again when done testing
  # databricks_ci:
  #   uses: Energinet-DataHub/.github/.github/workflows/python-ci-test-and-coverage.yml@v8
  #   with:
  #     PATH_STATIC_CHECKS: './source/databricks'
  #     # documented here https://github.com/Energinet-DataHub/opengeh-wholesale/tree/main/source/databricks#styling-and-formatting
  #     IGNORE_ERRORS_AND_WARNING_FLAKE8: 'E501,F401,E402,E203,W503'
  #     TEST_REPORT_PATH: ./source/databricks/htmlcov/

  wheel_ci:
    uses:  Energinet-DataHub/.github/.github/workflows/python-wheel-ci.yml@v8
    with:
      PYHTON_VERSION: '3.8.6'
      ARCHITECTURE: 'x64'
      WHEEL_WORKING_DIRECTORY: './source/databricks'
      ARTIFACT_NAME: 'wheel'
      ARTIFACT_PATH: './source/databricks/dist'

  terraform_validate:
    uses: Energinet-DataHub/.github/.github/workflows/terraform-validate.yml@v8
    with:
      TERRAFORM_WORKING_DIR_PATH: "./build/infrastructure/main"
      TERRAFORM_VERSION: '1.2.2'

  # TODO: Enable again when done testing
  create_prerelease:
    needs: [
      ci_base,
      terraform_validate,
      dotnet_solution_ci_build,
      dotnet_solution_ci_test_integrationtests_part1,
      dotnet_solution_ci_test_integrationtests_part2,
      dotnet_solution_ci_test_tests,
      #databricks_ci,
      wheel_ci
    ]
    uses: Energinet-DataHub/.github/.github/workflows/create-prerelease.yml@v8
    with:
      CALLER_REPOSITORY_PATH: Energinet-DataHub/opengeh-wholesale
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
