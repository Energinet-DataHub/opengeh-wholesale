# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  #
  # License and Markdown Check
  #

  ci_base:
    uses: Energinet-DataHub/.github/.github/workflows/ci-base.yml@v9

  #
  # Detect changes to start relevant jobs
  #

  changes:
    uses: ./.github/workflows/detect-changes.yml

  #
  # CI Databricks
  #

  databricks_ci_build:
    needs: changes
    if: ${{ needs.changes.outputs.databricks == 'true' }}
    uses:  Energinet-DataHub/.github/.github/workflows/databricks-build-prerelease.yml@v9
    with:
      PYHTON_VERSION: '3.9.7'
      ARCHITECTURE: 'x64'
      WHEEL_WORKING_DIRECTORY: './source/databricks'

  databricks_ci_test:
    needs: changes
    if: ${{ needs.changes.outputs.databricks == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v9
    with:
      OPERATING_SYSTEM: 'dh3-ubuntu-20.04-4core'
      PATH_STATIC_CHECKS: './source/databricks'
      # documented here https://github.com/Energinet-DataHub/opengeh-wholesale/tree/main/source/databricks#styling-and-formatting
      IGNORE_ERRORS_AND_WARNING_FLAKE8: 'E501,F401,E402,E203,W503'
      TEST_REPORT_PATH: ./source/databricks/tests/htmlcov/

  #
  # CI .NET
  #

  # Build all projects within solution
  dotnet_ci_build:
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-build-prerelease.yml@v9
    with:
      OPERATING_SYSTEM: 'dh3-ubuntu-20.04-4core'
      SOLUTION_FILE_PATH: 'source/dotnet/Services/Wholesale.sln'

  # Run tests in 'IntegrationTests.dll' NOT within the namespace 'IntegrationEventListener'
  dotnet_ci_test_integrationtests_part1:
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v9
    with:
      OPERATING_SYSTEM: 'dh3-windows-2022-8cores'
      TESTS_DLL_FILE_PATH: '\source\dotnet\Services\IntegrationTests\bin\Release\net6.0\Energinet.DataHub.Wholesale.IntegrationTests.dll'
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_NAME: ASPNETCORE_TEST_CONTENTROOT_ENERGINET_DATAHUB_WHOLESALE_WEBAPI
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_VALUE: '\source\dotnet\Services\WebApi'
      DOWNLOAD_ATTEMPT_LIMIT: 20
      USE_AZURE_FUNCTIONS_TOOLS: true
      ENVIRONMENT: AzureAuth
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_SECRETS_KEYVAULT_URL: ${{ secrets.AZURE_SECRETS_KEYVAULT_URL }}

  # Run all tests in 'Tests.dll'
  dotnet_ci_test_tests:
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v9
    with:
      OPERATING_SYSTEM: 'dh3-windows-2022-8cores'
      TESTS_DLL_FILE_PATH: '\source\dotnet\Services\Tests\bin\Release\net6.0\Energinet.DataHub.Wholesale.Tests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 20

  #
  # Branch policy status check
  #

  allow_merge:
    runs-on: ubuntu-latest
    needs: [
      ci_base,
      # Databricks
      databricks_ci_build,
      databricks_ci_test,
      # .NET
      dotnet_ci_build,
      dotnet_ci_test_integrationtests_part1,
      dotnet_ci_test_tests
    ]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"

          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi