name: Integration test Terraform CI

permissions:
  id-token: write
  contents: read

on:
  workflow_call: {}

jobs:
  terraform_test:
    runs-on: ubuntu-latest
    environment: test_002
    env:
      ARM_SUBSCRIPTION_ID: ${{ vars.azure_subscription_id }}
      ARM_TENANT_ID: ${{ vars.azure_tenant_id }}
      ARM_CLIENT_ID: ${{ vars.azure_spn_id }}
      TF_VAR_environment_short: test
      TF_VAR_environment_instance: "002"
      TF_VAR_subscription_id: ${{ vars.azure_subscription_id }}
      TF_VAR_location: West Europe
      TF_VAR_github_personal_access_token: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_arm_client_id: ${{ vars.azure_spn_id }}
      TF_VAR_kv_secrets: >
        [{
          "name": "test-secret",
          "value": "test-value"
        }]
      TF_VAR_b2c_kv_secrets: >
        [{
          "name": "test-secret",
          "value": "test-value"
        }]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: 1.3.6

      - name: Set Terraform env Variables
        shell: bash
        run: |
          # Runner ID
          runner_ip=$(curl -s https://api.ipify.org)
          echo "TF_VAR_runner_ip=$(echo $runner_ip)" >> $GITHUB_ENV

          # Unique project name
          GITHUB_RUN_ID=$(uuidgen)
          GITHUB_RUN_ID="${GITHUB_RUN_ID: -5}"

          echo "TF_VAR_project_name=int$GITHUB_RUN_ID" >> $GITHUB_ENV
          echo "TF_VAR_domain_name_short=int$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.azure_spn_id }}
          tenant-id: ${{ vars.azure_tenant_id }}
          subscription-id: ${{ vars.azure_subscription_id }}

      - name: Create temp folder
        shell: bash
        run: |
          # Moving the resource-group_override to add tags to the resource group
          cp -r integration-test/terraform/main/smoketest/* integration-test/terraform/main/

          # We don't want to use the backend.tf file in the smoketest folder since we dont need remote state
          rm -rf integration-test/terraform/main/backend.tf

      - name: Terraform Init
        shell: bash
        working-directory: integration-test/terraform/main
        run: terraform init

      - name: Terraform Plan
        shell: bash
        working-directory: integration-test/terraform/main
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        shell: bash
        working-directory: integration-test/terraform/main
        run: terraform apply tfplan

      - name: Obtain Terraform output
        if: always()
        shell: bash
        id: terraform_output
        working-directory: integration-test/terraform/main
        run: |
          echo "resource_group_name=$(terraform output -json | jq -r .resource_group_name.value)" >>$GITHUB_OUTPUT
          echo "dbw_resource_group_name=$(terraform output -json | jq -r .dbw_resource_group_name.value)" >>$GITHUB_OUTPUT

      - name: Terraform Cleanup AZ CLI
        if: always()
        shell: pwsh
        run: |
          $groupExists = az group exists --name ${{ steps.terraform_output.outputs.resource_group_name }}
          # We delete the group here, as we need to wait on the resource group to be deleted
          # before we can delete the databricks resource group, as it creates deny assignments
          if ($groupExists) {
            Write-Host "Deleting resource group ${{ steps.terraform_output.outputs.resource_group_name }}"
            az group delete --name ${{ steps.terraform_output.outputs.resource_group_name }} --yes
          }
          # We need to delete it manually, as it created unity catalog resources automatically
          # It uses resource delete, as databricks outputs the resource id, and not the resource group name
          Write-Host "Deleting databricks resource group ${{ steps.terraform_output.outputs.dbw_resource_group_name }}"
          az resource delete --ids ${{ steps.terraform_output.outputs.dbw_resource_group_name }}
