# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Prepare dotnet outputs

#
# This action is called from:
#  - the 'dotnet-solution-ci.yml' file IF the workflow parameter PREPARE_OUTPUTS is set to 'true'.
#  - the 'dotnet-build-prerelease.yml' file.
#
# Prepared outputs will be zipped and uploaded as the 'dotnet' artifact.
#
# All 'apps' must be output into the '\functions\' subfolder, to match
# how they are later retrieved in the '<domain>-stage-deployment.yml' file.
#

inputs:
  OUTPUT_PATH:
    required: true

runs:
  using: composite
  steps:
    - name: Publish IntegrationEventListener
      shell: bash
      run: |
        dotnet publish \
          '.\source\dotnet\Services\IntegrationEventListener\IntegrationEventListener.csproj' \
          --no-build \
          --no-restore \
          --configuration Release \
          --output '${{ inputs.OUTPUT_PATH }}\functions\integrationeventlistener'

    - name: Publish ProcessManager
      shell: bash
      run: |
        dotnet publish \
          '.\source\dotnet\Services\ProcessManager\ProcessManager.csproj' \
          --no-build \
          --no-restore \
          --configuration Release \
          --output '${{ inputs.OUTPUT_PATH }}\functions\processmanager'

    - name: Publish Sender
      shell: bash
      run: |
        dotnet publish \
          '.\source\dotnet\Services\Sender\Sender.csproj' \
          --no-build \
          --no-restore \
          --configuration Release \
          --output '${{ inputs.OUTPUT_PATH }}\functions\sender'

    - name: Publish Web API
      shell: bash
      run: |
        dotnet publish \
          '.\source\dotnet\Services\WebApi\WebApi.csproj' \
          --no-build \
          --no-restore \
          --configuration Release \
          --output '${{ inputs.OUTPUT_PATH }}\functions\webapi'

    - name: Publish Database Migration
      shell: bash
      run: |
        dotnet publish \
          '.\source\dotnet\Services\DatabaseMigration\DatabaseMigration.csproj' \
          --no-build \
          --no-restore \
          --configuration Release \
          --output '${{ inputs.OUTPUT_PATH }}\databasemigration'
